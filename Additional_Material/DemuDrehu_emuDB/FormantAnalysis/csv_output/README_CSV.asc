------------------------------------------------

BAS WebServices 'FormantAnalysis'  -  CSV Tables

------------------------------------------------

Notes
=====

'Phoneme class': in the following we refer to one analysed phoneme symbol (see option --sounds) as a 'phoneme class'. 
If a column name or a table file name contains one of the strings 'Mean' or 'Median', all calculations that require averaging values 
  have been carried out using either the mean or the median (i.e. in 'FormantSummaryNoOutliersMedian.csv')
'Phone token value': many of the following tables are based on so called 'phone token values' of formants F1-F4. 
  A 'phone token value' is either the arithmetic mean (or the median) of the mid 50% time values of a formant track (default), 
  or the formant value taken from the exact midpoint of the formant track (option --midpoint true). Formant tracks
  are median-smoothed before deriving the phone token value ([3,4,5]).
All tables are CSV format with ',' (comma) as field separator.
The file name in tables refers to the signal file name by concatenating the session name (usually '0000') with 
  the bundle name (the basename of the signal file); e.g. '0000_File10' refers to the signal file 'File10.wav'
  in session '0000'.
Some tables contain formant values measured in Bark. The formula for the transformation is taken from [7]. 
If a table file name contains the string 'NoOutliers', outlier phone token values have been removed from the table, 
  if their euclidian|mahalanobis distance (option --outlierMetric) to the phoneme class mean is larger 
  than the value given in option --outlierThreshold.

The following table descriptions are ordered by increasing detail/complexity. We start with averaged values per 
analysed phoneme class and end with complete formant tracks or eRatios of phone tokens. You will notice that the 
length und width of tables increases accordingly. To understand more complex tables it is useful to first read and
inspect the (ealier listed) simpler tables.


CSV Tables
==========

PhonemeAverages.csv :

Phoneme class averages (mean, median) of all F1-F4 phone token values in Hz (one line per phoneme class); additionally 
the covariances of F1/F2 calculated over all phone token values in that class (see definition of 'phone token value' above).
This table gives a first broad overview of the speaker's typical formant values; the covariance values
are useful, if you intend to calculate mahalanobis distances of arbitrary points in the F1/F2 space to the 
phoneme class centers.

Column descriptions:

phoneme: Phoneme identifier of row
count: Number of tokens of phoneme found in the database
meanF1: F1 mean of all phone token values
meanF2: F2 mean of all phone token values
meanF3: F3 mean of all phone token values
meanF4: F4 mean of all phone token values
medianF1: F1 median of all phone token values
medianF2: F2 median of all phone token values
medianF3: F3 median of all phone token values
medianF4: F4 median of all phone token values
covF1F2: Covariance between F1/F2 phone token values computed by the cov() R function
covWithinF1: variance squared of F1 phone token values
covWithinF2: variance squared of F2 phone token values


FormantSummary.csv :

This table contains the phone token values in Hz and Bark (see definition of 'phone token value' above),
together with file name, start and end of the complete segment (as segmented by MAUS) within the file in milliseconds.
This table has as many lines as there are analysed phone tokens (minus outliers); as outlined above the table contains
mean and medians of the mid 50% of the formant tracks (see column titles).
The midDistanceMean|Median columns contain the distance (metric determined by --outlierMetric) of the phone token value 
to the respective phoneme class center (again computed by Mean|Median) in the F1/F2 space; the remaining column names are 
self-explanatory.
This table is useful if you are interested in formant-by-token values, e.g. for plotting all tokens' position in the F1/F2 space,
or to investigate the spread of the formant values for one phoneme class, for example to plot a histogram or to compute
the standard deviation.

FormantSummaryNoOutliersMean.csv :
FormantSummaryNoOutliersMedian.csv :

These tables are of the same format as 'FormantSummary.csv', but with outlier removal; since outlier removal is dependent on the 
phoneme class center, the number of removed outliers may change with different methods to calculate the phoneme class center;
therefore we present two tables here with Mean and Median phoneme class centers which may deviate in number of removed outliers.

----------------------------------------

TimeNormalizedMedianSmoothedFormantTracks.csv :

R tibble object [1] with the standard output from an emuR query [2], with median-smoothed and time-normalized 
formant tracks (21 timesteps per track).
Median smoothing is applied over triplets of Formant samples, employing the Härdle-Steiger algorithm [3] and Tukey's 
robust end-point rule [4] (see also [5]).
This table has 21 rows (= 1 time-normalized track) per phone token; to extract the F1-F4 tracks of a single phone
token, extract all rows with the same "sl_rowIdx", then take the respective formant column (e.g. "F1") time-indexed by
the values in "times_orig" (or "times_rel"|"times_norm" depending on what you intend to plot).
This tibble object is useful if you want to inspect the individual (median-smoothed and time-normalized) formant tracks as
delivered by the formant tracker in all analysed phone tokens, e.g. 
to plot assemble track plots or to apply higher functional statistics on the actual track shapes.

Column descriptions:

sl_rowIdx: index of phone.
labels: Phoneme label of phone token.
start: Start of phone token in ms from start of recording.
end: End of phone token in ms from start of recording.
db_uuid: emuDB unique identifier.
session: session identifier.
bundle: bundle identifier.
start_item_seq_idx: start phone index on the level of the queried sequence (only relevant if you provide your own emuR 
  query otherwise it will always be 1 because single phones are being queried)
end_item_seq_idx: end phone index on the level of the queried sequence
type: SEGMENT or EVENT or ITEM (will always be SEGMENT, except if you provide your own emuR query)
sample_start: start of phone token in samples from start of recording.
sample_end: end of phone token in samples from start of recording.
sample_rate: sample rate of recording.
times_orig: absolute time of Formant extraction within the phone token segment in ms
times_rel: relative time of Formant extraction within the phone token segment before time normalization.
times_norm: relative time of Formant extraction within the phone token segment after normalizing the length of all tracks to 
  21 samples (thus always one of 21 time-steps 0 0.05 0.10 0.15 ... 0.95 1.00).
F1: Formant track value for F1 in Hz
F2: Formant track value for F2 in Hz
F3: Formant track value for F3 in Hz
F4: Formant track value for F4 in Hz


----------------------------------------------

eRatiosMean.csv :
eRatiosMedian.csv :

These tables are only present if the option --eRatios true is set.
They contain so called 'eRatios' of all phone token values (calculated as Mean or Median from the formant tracks)
measured against all possible combinations 
of phoneme centers (calculated as the Mean or Median of all phone token labels).
The eRatio is defined as the ratio of Euclidean distances in the 2-dimensional F1/F2 space of one given 
phone token X to two other phoneme centers Y and Z ([6]; in [6] the Mean is used):

               dist( X , average(Y) )
eRatio = ln [  ----------------------  ]
               dist( X , average(Z) )

where:
           dist( X , Y ) is the Euclidean distance in the F1/F2 space
           average( Y ) is the group mean/median of all Y phone tokens in the F1/F2 space

The eRatio can be used as a rough proximity measure for phone tokens in the acoustic F1/F2 space: 
if the eRatio is positive, the phone token is closer to the phoneme class Z; 
if the eRatio is negative, the phone token is closer to the phoneme class Y.

This table is useful, if you want a rough classification of phone token values into phoneme classes.
BEWARE: this table (and its computation) can become VERY LARGE, if the number of analysed phoneme
classes (i.e. the list in option --sounds) is larger than 10.

The table is structured as follows:
Filename        : session name + '_' + signal file name
Phoneme         : the label of the analysed phone token
start
end             : begin/end absolute times of the phone token in msec within the recording
F*              : Mean/Median of formant F* (phone token value for F*)
Y_and_Z         : one column for each possible dual combination of phone classes, e.g. if the number of extracted
                  vowels is three: 'a i: o:' then there are 3 columns:
                  o:_and_i: a_and_i: a_and_o: 
                  Note that reversing the ratio (o:_and_i: and i:_and_o:) results in the same log value 
                  but with a different sign, so these duplicate columns have been omitted.

References
==========

[1] https://tibble.tidyverse.org/, version 3.0.5, last seen 20/01/2021
[2] Winkelmann, R., Harrington, J., & Jänsch, K. (2017). EMU-SDMS: Advanced speech database management 
    and analysis in R. Computer Speech & Language, 45, 392-410. pp.66
[3] Härdle, W. and Steiger, W. (1995) Algorithm AS 296: Optimal median smoothing, Applied Statistics 44, 258–264.
[4] John W. Tukey (1977) Exploratory Data Analysis, Addison.
[5] https://www.rdocumentation.org/packages/stats/versions/3.6.2/topics/runmed, last seen 20/01/2021
[6] Kleber, F., Harrington, J., & Reubold, U. (2012). The relationship between the perception and production of coarticulation during a sound change in progress. Language and speech, 55(3), 383-405.
[7] Traunmueller, H. (1990) "Analytical expressions for the tonotopic sensory scale" J. Acoust. Soc. Am. 88: 97-100.



